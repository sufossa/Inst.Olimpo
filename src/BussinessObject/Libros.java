package BussinessObject;

import DataAccessObject.LibroDAO;
import TransferObject.LibroDTO;
import java.util.List;
import javax.swing.JOptionPane;

public class Libros {
    
    private LibroDAO libroDAO;
    
    public Libros() {
        libroDAO = new LibroDAO();
    }
    
    public List<LibroDTO> listar() {
        return libroDAO.listar();
    }
    
    public String agregar(String nombre, int idAutor, int idEditorial, int idArea, String stock, String anoEdicion) {      
        String mensaje;
        LibroDTO libroDTO = new LibroDTO(0, nombre, idAutor, idEditorial, idArea, stock, anoEdicion); // ID_LIBRO is 0 because it's auto-generated by the database
        if (libroDAO.agregar(libroDTO)) {
            mensaje = "El libro se registró exitosamente";
            JOptionPane.showMessageDialog(null, mensaje);
        } else {
            mensaje = "Error, el libro no se pudo registrar";
            JOptionPane.showMessageDialog(null, mensaje);
        }
        return mensaje;
    }
public String eliminar(int idLibro) {
    String mensaje;
    LibroDTO libroDTO = new LibroDTO();
    libroDTO.setID_LIBRO(idLibro);
    try {
        if (libroDAO.eliminar(libroDTO)) {
            mensaje = "El libro se eliminó exitosamente";
            JOptionPane.showMessageDialog(null, mensaje);
        } else {
            mensaje = "Problemas para eliminar el libro";
            JOptionPane.showMessageDialog(null, mensaje);
        }
    } catch (Exception ex) {
        mensaje = "Error al intentar eliminar el libro: " + ex.getMessage();
        JOptionPane.showMessageDialog(null, mensaje);
    }
    return mensaje;
}

    public String actualizar(int idLibro, String nombre, int idAutor, int idEditorial, int idArea, String stock, String anoEdicion) {
        String mensaje;
        LibroDTO libroDTO = new LibroDTO(idLibro, nombre, idAutor, idEditorial, idArea, stock, anoEdicion);
        if (libroDAO.actualizar(libroDTO)) {
            mensaje = "El libro se actualizó exitosamente";
            JOptionPane.showMessageDialog(null, mensaje);
        } else {
            mensaje = "Error, el libro no se pudo actualizar";
            JOptionPane.showMessageDialog(null, mensaje);
        }
        return mensaje;
    }
    
    public List<LibroDTO> buscarPorNombre(String nombre) {
        return libroDAO.buscarPorNombre(nombre);
    }
    
    public List<LibroDTO> buscarPorArea(int idArea) {
        return libroDAO.buscarPorArea(idArea);
    }
    
     public List<LibroDTO> buscarPorEditorial(int idEditorial) {
        return libroDAO.buscarPorEditorial(idEditorial);
    }

    public String agregar(String nombreLibro) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
    

}
